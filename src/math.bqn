# Loading
# )cs •Ex "../bqn-ws/src/math.bqn"

keyb ← "
┌────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬─────────┐
│~ ¬ │! ⎉ │@ ⚇ │# ⍟ │$ ◶ │% ⊘ │^ ⎊ │& ⍎ │* ⍕ │( ⟨ │) ⟩ │_ √ │+ ⋆ │Backspace│
│` ˜ │1 ˘ │2 ¨ │3 ⁼ │4 ⌜ │5 ´ │6 ˝ │7   │8 ∞ │9 ¯ │0 • │- ÷ │= × │         │
├────┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬──────┤
│Tab    │Q ↙ │W 𝕎 │E ⍷ │R 𝕣 │T ⍋ │Y   │U   │I ⊑ │O ⊒ │P ⍳ │{ ⊣ │} ⊢ │|     │
│       │q ⌽ │w 𝕨 │e ∊ │r ↑ │t ∧ │y   │u ⊔ │i ⊏ │o ⊐ │p π │[ ← │] → │\     │
├───────┴┬───┴┬───┴┬───┴┬───┴┬───┴┬───┴┬───┴┬───┴┬───┴┬───┴┬───┴┬───┴──────┤
│Caps    │A ↖ │S 𝕊 │D   │F 𝔽 │G 𝔾 │H   │J   │K ⌾ │L   │: · │"" ˙ │Enter     │
│Lock    │a ⍉ │s 𝕤 │d ↕ │f 𝕗 │g 𝕘 │h ⊸ │j ∘ │k ○ │l ⟜ │; ⋄ │' ↩ │          │
├────────┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──┬─┴──────────┤
│Shift      │Z   │X 𝕏 │C   │V ⍒ │B ⌈ │N   │M ≢ │< ≤ │> ≥ │?   │Shift       │
│           │z ⥊ │x 𝕩 │c ↓ │v ∨ │b ⌊ │n   │m ≡ │, ∾ │. ≍ │/ ≠ │            │
└───────────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────────────┘
                             Space: ‿
"
# Univariate Sample Statistics

⟨Mean,Stdev,Skew,Kurt⟩ ← {
    Mean  ← { (+´÷≠) 𝕩}
    _asop ← { (𝕗 +≠ 𝕩) ÷˜ +´(𝕩 - Mean 𝕩) ⋆ 𝕨    } # adjusted sum of powers
    _bar  ← { (𝕨 𝔽  𝕩) ÷    (2   𝔽    𝕩) ⋆ 𝕨 ÷ 2} #TODO rewrite using tacit fns
    Stdev ← { √ 2(¯1 _asop)      𝕩}
    Skew  ← {   3( 0 _asop) _bar 𝕩}
    Kurt  ← {   4( 0 _asop) _bar 𝕩}
    ⟨Mean,Stdev,Skew,Kurt⟩
}

# tests
#    Stdev ⟨2,3,4,6,13,2⟩
# 4.19523539268061
#    Skew ⟨2,3,4,6,13,2⟩
# 1.33525474738746
#    Kurt ⟨2,3,4,6,13,2⟩
# 3.31301652892562

# Univariate Population Statistics #TODO

# circle functions
⟨Cos,Sin⟩ ← {
    Factorial ← {×´1+↕𝕩}
    _taylor ← {+´(Factorial¨𝕗+2×𝕨)÷˜(¯1⋆𝕨)×𝕩⋆𝕗+2×𝕨}
    series ← ↕18 # 18 → precision
    Cos ← { (series) (0 _taylor) 𝕩 }
    Sin ← { (series) (1 _taylor) 𝕩 }
    ⟨Cos,Sin⟩
}

# PRNG
# convert to binary
Xor ← {
    Encode ← { (64⥊2) {𝕨|1↓⌊∘÷`⌾⌽𝕨∾<𝕩} 𝕩 }  # Base64 Encode
    Decode ← { 2 {+⟜(𝕨⊸×)´⌽𝕩} 𝕩 }           # Base64 Decode
    Rol64 ← ⌽
    Shl ← { (𝕨⥊0)∾˜(𝕨-≠𝕩)↑ 𝕩}   # shift left
    Shr ← {⌽(𝕨⥊0)∾˜(𝕨-≠𝕩)↑⌽𝕩}   # shift right
    #{ 9 × 7 ⌽ ToBin 5×1⊑𝕩} {17 Shl 1 ⊑ 𝕩} 60‿120‿240‿480
    Result ← { 9 × 7 ⌽ Encode 5×1⊑𝕩}
    T ← { 17 Shl Encode 1⊑𝕩}
    S0 ← {(Encode 2⊑𝕩)≠ Encode 0⊑𝕩}
    S1 ← {(Encode 3⊑𝕩)≠ Encode 1⊑𝕩}
    S2 ← {(Encode 1⊑𝕩)≠ Encode 2⊑𝕩}
    S3 ← {(Encode 0⊑𝕩)≠ Encode 3⊑𝕩}

    ⟨(Decode Result 𝕩),⟨(Decode S0 𝕩),(Decode S1 𝕩),(Decode (T 𝕩) ≠ S2 𝕩),(Decode 45 Rol64 S3 𝕩)⟩⟩
}

# { {((¯2×⍟1⊃⍵)*0.5)×1○○2×2⊃⍵} ⍺ {⊂[1+⍳⍴,⍵](?(2,⍵)⍴⍺)÷⍺} ⍵} 
#     (x y)←⊂[1+⍳⍴,N](?(2,N)⍴depth)÷depth  ⍝ two random variables within ]0;1]
#     Z←((¯2×⍟x)*0.5)×1○○2×y               ⍝ Box-Muller distribution


⍎
